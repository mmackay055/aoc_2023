from unittest import TestCase
from solutions.d5 import common


class D5CommonTest(TestCase):
    def test_build_map(self):
        self.assertEqual(common.Map(98, 50, 2), common.build_map('50 98 2'))
        self.assertEqual(common.Map(98, 5, 2), common.build_map('5 98 2'))
        self.assertEqual(common.Map(9, 5, 2), common.build_map(' 5 9 2 '))
        self.assertEqual(common.Map(9, 5, 2), common.build_map(' 5 9 2'))
        self.assertEqual(common.Map(9, 5, 2), common.build_map('5 9 2 '))

    def test_map_output(self):
        map = common.Map(50, 98, 10)
        self.assertEqual((98, 108), map.output([50, 60]))
        self.assertEqual((98, 108), map.output([49, 60]))
        self.assertEqual((99, 108), map.output([51, 60]))
        self.assertEqual((98, 108), map.output([50, 61]))
        self.assertEqual((98, 108), map.output([49, 61]))
        self.assertEqual((99, 108), map.output([51, 60]))
        self.assertEqual((98, 107), map.output([50, 59]))
        self.assertEqual((99, 107), map.output([51, 59]))

    def test_mapper_output(self):
        mapper = common.Mapper('test')
        mapper.add(common.Map(5, 50, 10))
        mapper.add(common.Map(15, 150, 10))
        mapper.add(common.Map(35, 350, 10))

        self.assertEqual([(0, 4)], mapper.output((0, 4)))
        self.assertEqual([(0, 4), (50, 52)], mapper.output((0, 7)))
        self.assertEqual([(0, 4), (50, 59)], mapper.output((0, 14)))
        self.assertEqual([(0, 4), (50, 59), (150, 150)], mapper.output((0, 15)))
        self.assertEqual([(0, 4), (50, 59), (150, 151)], mapper.output((0, 16)))
        self.assertEqual([(0, 4), (50, 59), (150, 159)], mapper.output((0, 24)))
        self.assertEqual([(0, 4), (50, 59), (150, 159), (25, 25)], mapper.output((0, 25)))
        self.assertEqual([(0, 4), (50, 59), (150, 159), (25, 34)], mapper.output((0, 34)))
        self.assertEqual([(0, 4), (50, 59), (150, 159), (25, 34), (350, 350)], mapper.output((0, 35)))
        self.assertEqual([(0, 4), (50, 59), (150, 159), (25, 34), (350, 359)], mapper.output((0, 44)))
        self.assertEqual([(0, 4), (50, 59), (150, 159), (25, 34), (350, 359), (45, 45)], mapper.output((0, 45)))
        self.assertEqual([(45, 55)], mapper.output((45, 55)))

    def test_mapper_output_2(self):
        mapper = common.Mapper('test')
        mapper.add(common.Map(5, 50, 10))
        self.assertEqual([(15, 25)], mapper.output((15, 25)))

    def test_mapper_output_3(self):
        mapper = common.Mapper('test')
        mapper.add(common.Map(98, 50, 2))
        mapper.add(common.Map(50, 52, 48))
        self.assertEqual([(81, 95)], mapper.output((79, 93)))
        mapper = common.Mapper('test')
        mapper.add(common.Map(15, 0, 37))
        mapper.add(common.Map(52, 37, 2))
        mapper.add(common.Map(0, 39, 15))
        self.assertEqual([(81, 95)], mapper.output((81, 95)))
        mapper = common.Mapper('test')
        mapper.add(common.Map(53, 49, 8))
        mapper.add(common.Map(11, 0, 42))
        mapper.add(common.Map(0, 42, 7))
        mapper.add(common.Map(7, 57, 4))
        self.assertEqual([(81, 95)], mapper.output((81, 95)))
        mapper = common.Mapper('test')
        mapper.add(common.Map(18, 88, 7))
        mapper.add(common.Map(25, 18, 70))
        self.assertEqual([(81, 95)], mapper.output((81, 95)))

    def test_almanac_build(self):
        builder = common.AlmanacDataParser()
        builder.process_line('seed-to-soil map:')
        builder.process_line('50 98 2')
        builder.process_line('52 50 48')
        builder.process_line('')
        builder.process_line('soil-to-fertilizer map')
        builder.process_line('0 15 37')
        builder.process_line('37 52 2')
        builder.process_line('39 0 15')
        builder.process_line('')
        builder.process_line('fertilizer-to-water map:')
        builder.process_line('49 53 8')
        builder.process_line('0 11 42')
        builder.process_line('42 0 7')
        builder.process_line('57 7 4')
        almanac = builder.build()
        self.assertEqual('seed-to-soil', almanac.mappers[0].name)
        self.assertEqual(common.Map(50, 52, 48), almanac.mappers[0].maps[0])
        self.assertEqual(common.Map(98, 50, 2), almanac.mappers[0].maps[1])
        self.assertEqual('soil-to-fertilizer', almanac.mappers[1].name)
        self.assertEqual(common.Map(0, 39, 15), almanac.mappers[1].maps[0])
        self.assertEqual(common.Map(15, 0, 37), almanac.mappers[1].maps[1])
        self.assertEqual(common.Map(52, 37, 2), almanac.mappers[1].maps[2])
        self.assertEqual('fertilizer-to-water', almanac.mappers[2].name)
        self.assertEqual(common.Map(0, 42, 7), almanac.mappers[2].maps[0])
        self.assertEqual(common.Map(7, 57, 4), almanac.mappers[2].maps[1])
        self.assertEqual(common.Map(11, 0, 42), almanac.mappers[2].maps[2])
        self.assertEqual(common.Map(53, 49, 8), almanac.mappers[2].maps[3])
